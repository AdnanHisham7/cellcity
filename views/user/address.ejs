<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Addresses</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css">
    <script src="https://kit.fontawesome.com/cd1d3af381.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css">


    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap"
        rel="stylesheet">

    <!-- Css Styles -->
    <link rel="stylesheet" href="css/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="css/elegant-icons.css" type="text/css">
    <link rel="stylesheet" href="css/magnific-popup.css" type="text/css">
    <link rel="stylesheet" href="css/nice-select.css" type="text/css">
    <link rel="stylesheet" href="css/owl.carousel.min.css" type="text/css">
    <link rel="stylesheet" href="css/slicknav.min.css" type="text/css">
    <style>

        body {
            background-color: #323232;
            color: white;
            font-family: 'Roboto', sans-serif;
        }

        /* Modal Dark Theme */
        .modal-content {
            background-color: #1c1e20;
            color: white;
            border: none;
            border-radius: 10px;
        }

        .modal-header {
            border-bottom: 1px solid #2d2f31;
        }

        .modal-title {
            font-weight: bold;
            color: #ffffff;
        }

        .btn-close {
            background-color: transparent;
            border: none;
            color: #ffffff;
        }

        .modal-body {
            background-color: #25282B;
            padding: 20px;
            border-radius: 10px;
        }

        .form-control {
            background-color: #323232;
            border: 1px solid #444;
            color: white;
            border-radius: 4px;
        }

        .form-control::placeholder {
            color: #a9b2bc;
        }

        .modal-footer {
            border-top: 1px solid #2d2f31;
        }

        .btn-primary {
            background-color: #007bff;
            border: none;
        }

        .btn-secondary {
            background-color: #6c757d;
            border: none;
        }

        .btn-secondary:hover,
        .btn-primary:hover {
            background-color: #0056b3;
        }

        .alert {
            background-color: #2d2f31;
            border: none;
            color: #ffffff;
        }

        .alert-info {
            background-color: #3c4044;
        }

        .alert-success {
            background-color: #2d8d57;
        }

        .alert-danger {
            background-color: #a94442;
        }

        .navbar {
            background-color: #000;
            padding: 0.5rem 1rem;
            z-index: 1000;
        }

        .navbar-nav .nav-link{
            margin-left: 20px;
        }

        .navbar-brand {
            font-weight: bold;
            color: #fff !important;
        }

        .nav-link {
            color: #fff !important;
        }

        .btn-outline-light {
            border-color: #fff;
            color: #fff;
        }

        .cart-badge {
            background-color: #ffc107;
            color: #000;
            border-radius: 50%;
            padding: 0.2em 0.5em;
            font-size: 0.75em;
            position: relative;
            top: -10px;
            left: -5px;
        }

        .avatar {
            width: 32px;
            height: 32px;
            background-color: #20c997;
            color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            font-weight: bold;
        }

        .avatar-2 {
            font-size: 24px;
            width: 40px;
            height: 40px;
            background-color: #20c997;
            color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            font-weight: bold;
        }

        .userame-name{
            font-size: 25px;
            margin-left: 8px;
            font-weight: bold;
        }

        .username-icon{
            display: flex;
            align-items: center;
            padding: 20px;
        }

        /* Sidebar Styles */
        .sidebar {
            background-color: #25282B;
            color: white;
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            width: 250px;
            margin-top: 50px;
            padding-top: 20px;
            padding-left: 0;
            padding-right: 0;
            z-index: 1;
        }

        .sidebar h2 {
            font-size: 1.5rem;
            padding-left: 1rem;
            margin-bottom: 1rem;
        }

        .sidebar .nav-link {
            padding: 0.75rem 1rem;
            font-size: 1rem;
            padding-left: 33px;
            color: #a9b2bc;
        }

        .sidebar .nav-link i{
                margin-right: 8px;
        }

        .sidebar .nav-link:hover {
            background-color: rgb(48, 48, 48);
        }

        .sidebar .nav-link.active {
            background-color: #424242;
            color: white;
        }

        /* Main Content Styles */
        .main-content {
            margin-left: 250px;
            /* Matches sidebar width */
            padding: 20px;
            min-height: 100vh;
        }


/* Profile and Address Card Styles */
        .profile-card,
        .address-card {
            background-color: #242729;
            border: none;
            margin-bottom: 20px;
            border-radius: 10px;
            padding: 20px;
        }

        .card-title {
            font-size: 1.25rem;
            font-weight: bold;
            margin-bottom: 1rem;
            color: #fff;
        }

        /* Form Control Styles */
        .form-control,
        .form-select {
            background-color: #323232;
            border: none;
            color: white;
            border-radius: 4px;
        }

        .form-control:disabled {
            background-color: #444; /* Darker background for disabled input */
            color: #a9b2bc; /* Lighter text color */
            opacity: 1; /* Ensure the input isn't semi-transparent */
            border: 1px solid #555; /* Subtle border for disabled input */
            cursor: not-allowed; /* Show "not-allowed" cursor */
        }


        .form-control::placeholder {
            color: #a9b2bc;
        }

        .btn-primary {
            background-color: #007bff;
            border: none;
            font-size: 1rem;
            padding: 0.5rem 1rem;
        }

        /* Breadcrumb Styles */
        .breadcrumb {
            background-color: transparent;
            padding: 0;
            margin-bottom: 1rem;
        }

        .breadcrumb-item,
        .breadcrumb-item a {
            color: #a9b2bc;
        }

        .breadcrumb-item.active {
            color: white;
        }

        @media (max-width: 992px) {
            .main-content {
                margin-left: 0;
            }

            .sidebar {
                height: auto;
                position: relative;
                width: 100%;
                margin-bottom: 20px;
                margin-top: -15px;
            }
        }

        @media (max-width: 576px) {

            .profile-card,
            .address-card {
                padding: 15px;
            }

            .navbar-brand {
                font-size: 1.25rem;
            }

            .sidebar h2 {
                font-size: 1.25rem;
            }

            .nav-link {
                font-size: 0.9rem;
            }
        }

        .addresses .card {
            border-radius: 8px !important;
            border: none !important; /* Remove default border */
            background-color: #1c1e20 !important; /* Dark background for cards */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2) !important; /* Soft shadow */
            transition: transform 0.3s ease, box-shadow 0.3s ease !important;
        }

        .addresses .card:hover {
            transform: translateY(-5px) !important; /* Lift effect on hover */
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3) !important; /* Darker shadow on hover */
        }

        .addresses .card-header {
            background-color: #000000 !important; /* Dark header background */
            color: #f8f9fa !important; /* Light text for the header */
            font-weight: bold !important;
            text-transform: uppercase !important;
            padding: 10px 15px !important;
            border-bottom: 1px solid #444 !important; /* Subtle border */
        }

        .addresses .card-body {
            color: #dcdcdc; /* Light text color */
        }

        .addresses .card-text i {
            margin-right: 0.5rem !important;
            font-size: 1rem !important;
            color: #D9B600 !important; /* Accent color for icons */
        }

        .addresses .card-footer {
            background-color: #2b2d30 !important; /* Dark background for footer */
            color: #f8f9fa !important; /* Light footer text */
            border-top: 1px solid #444 !important; /* Subtle top border */
            padding: 0.75rem !important;
        }

        .addresses .btn-outline-primary {
            border-color: #007bff; /* Blue border */
            color: #007bff; /* Blue text */
            background-color: transparent;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .addresses .btn-outline-primary:hover {
            background-color: #007bff !important; /* Blue background on hover */
            color: #ffffff !important; /* White text on hover */
        }

        .addresses .btn-outline-danger {
            border-color: #dc3545 !important; /* Red border */
            color: #dc3545; /* Red text */
            background-color: transparent;
            transition: background-color 0.3s ease, color 0.3s ease !important;
        }

        .addresses .btn-outline-danger:hover {
            background-color: #dc3545; /* Red background on hover */
            color: #ffffff; /* White text on hover */
        }

        /* Button to Add New Address */
        .addresses .btn-primary {
            background-color: #007bff; /* Blue button background */
            border: none;
            color: #fff;
            transition: background-color 0.3s ease;
        }

        .addresses .btn-primary:hover {
            background-color: #0056b3 !important; /* Darker blue on hover */
        }

        /* Message for No Addresses Found */
        .addresses p {
            color: #dcdcdc !important; /* Light text for message */
        }

        .addresses a.btn-success {
            background-color: #28a745 !important; /* Green button for "Add Address" */
            border: none !important;
            color: #fff !important;
            transition: background-color 0.3s ease !important;
        }

        .addresses a.btn-success:hover {
            background-color: #218838 !important; /* Darker green on hover */
        }


       
    </style>
</head>

<body>
     <!-- Navbar -->
     <nav class="navbar fixed-top navbar-expand-lg navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">
                <!-- <i class="fas fa-heart-pulse me-2"></i> -->
                CELLCITY
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/shop">
                            <i class="fas fa-box-open me-1"></i>
                            PRODUCTS
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/cart">
                            <i class="fas fa-shopping-cart me-1"></i>
                            CART
                            <span class="cart-badge">3</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/wishlist">
                            <i class="fas fa-heart me-1"></i>
                            WISHLIST
                        </a>
                    </li>
                    <li class="nav-item ms-2">
                        <div class="avatar nav-link"><%= user.username[0].toUpperCase() %></div>
                    </li>
                </ul>
            </div>
        </div>
    </nav>


    <!-- Main Layout -->
    <div class="container-fluid">
        <div class="row" style="margin-top: 70px;">
            <!-- Sidebar -->
            <div class="col-lg-3 col-md-4 sidebar">
                <div class="d-flex username-icon">
                    <div class="avatar-2"><%=  user.username[0].toUpperCase() %></div>
                <div class="userame-name"><%=  user.username %></div>

                </div>
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link <%= currentUrl === '/profile' ? 'active' : '' %>" href="/profile"><i
                        class="fa-solid fa-chart-line"></i>My Profile</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link <%= currentUrl === '/profile/address' ? 'active' : '' %>"
                            href="/profile/address"><i class="fa-solid fa-users"></i>Addresses</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link <%= currentUrl === '/orders' ? 'active' : '' %>" href="/orders"><i
                                class="fa-solid fa-list"></i>Orders</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link <%= currentUrl === '/coupons' ? 'active' : '' %>" href="/coupons"><i class="fa-solid fa-ticket-simple"></i>Coupons</a>
                    </li>
                    <li class="nav-item"></li>
                    <a class="nav-link <%= currentUrl === '/wishlist' ? 'active' : '' %>" href="/wishlist"><i class="fa-solid fa-heart"></i>Wishlist</a>
                    </li>
                    <li class="nav-item"></li>
                    <a class="nav-link <%= currentUrl === '/wallet' ? 'active' : '' %>" href="/wallet"><i class="fa-solid fa-wallet"></i>Wallet</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link <%= currentUrl === '/reviews' ? 'active' : '' %>" href="/reviews"><i class="fa-regular fa-comments"></i>Reviews</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link <%= currentUrl === '/profile/resetPassword' ? 'active' : '' %>"
                            href="/profile/resetPassword"><i class="fa-solid fa-rotate-left"></i>Reset Password</a>
                    </li>

                    <li class="nav-item"></li>
                    <a class="nav-link" href="/logout"><i class="fa-solid fa-arrow-right-from-bracket"></i>Logout</a>
                    </li>
                </ul>
            </div>

            <!-- Main Content -->
            <div class="col-lg-9 col-md-8 offset-lg-3 offset-md-4 main-content">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/">Home</a></li>
                        <li class="breadcrumb-item"><a href="/profile">User</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Addresses</li>
                    </ol>
                </nav>


                <!-- Address List -->
                <div class="addresses my-4">
                    <!-- <h1 class="mb-4">Your Addresses</h1> -->
                    <div class="row">
                        <!-- Button to Open Modal -->
                        <div class="container my-4">
                            <div class="row">
                                <div class="col-12 text-start">
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal"
                                        data-bs-target="#addAddressModal">
                                        Add New Address
                                    </button>
                                </div>
                            </div>
                        </div>

                        <% if (user.addresses.length> 0) { %>
                            <% user.addresses.forEach(address=> { %>
                                <div class="col-md-6 col-lg-4 mb-4">
                                    <div class="card border-0 shadow-sm h-100">
                                        <div class="card-header bg-light border-bottom-0">
                                            <h5 class="mb-0">
                                                <%= address.label || "Address" %>
                                            </h5>
                                        </div>
                                        <div class="card-body">
                                            <p class="card-text mb-2">
                                                <i class="fas fa-map-marker-alt text-primary"></i>
                                                <%= address.street %>
                                            </p>
                                            <p class="card-text mb-2">
                                                <i class="fas fa-city text-primary"></i>
                                                <%= address.city %>, <%= address.state %> - <%= address.zip %>
                                            </p>
                                            <p class="card-text">
                                                <i class="fas fa-globe text-primary"></i>
                                                <%= address.country %>
                                            </p>
                                        </div>
                                        <div class="card-footer bg-white border-top-0 d-flex justify-content-between">
                                            <button type="button" class="btn btn-outline-primary btn-sm"
                                                data-bs-toggle="modal" data-bs-target="#editAddressModal"
                                                data-id="<%= address.id %>" data-label="<%= address.label || "" %>"
                                                data-street="<%= address.street %>" data-city="<%= address.city %>"
                                                data-state="<%= address.state %>" data-country="<%= address.country %>"
                                                data-phone="<%= address.phoneNumber %>" data-zip="<%= address.zip %>">
                                                Edit
                                            </button>
                                            <form action="/profile/address/remove/<%= address.id %>" method="POST" class="delete-address-form"
                                                style="display:inline;">
                                                <button type="button" class="btn btn-outline-danger btn-sm delete-address-btn">
                                                    Delete
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                                <% }) %>
                                    <% } else { %>
                                        <div class="col-12">
                                            <p>No addresses found.</p>
                                        </div>
                                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!-- Add Addess Structure -->
    <div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addAddressForm">
                        <div class="mb-3">
                            <label for="label" class="form-label">Label (Optional)</label>
                            <input type="text" class="form-control" id="label" name="label"
                                placeholder="Home, Work, etc.">
                            <div id="label-error" class="text-danger"></div>
                        </div>
                        <div class="mb-3">
                            <label for="street" class="form-label">Street</label>
                            <input type="text" class="form-control" id="street" name="street">
                            <div id="street-error" class="text-danger"></div>
                        </div>
                        <div class="mb-3">
                            <label for="city" class="form-label">City</label>
                            <input type="text" class="form-control" id="city" name="city">
                            <div id="city-error" class="text-danger"></div>
                        </div>
                        <div class="mb-3">
                            <label for="state" class="form-label">State</label>
                            <input type="text" class="form-control" id="state" name="state">
                            <div id="state-error" class="text-danger"></div>
                        </div>
                        <div class="mb-3">
                            <label for="country" class="form-label">Country</label>
                            <input type="text" class="form-control" id="country" name="country">
                            <div id="country-error" class="text-danger"></div>
                        </div>
                        <div class="mb-3">
                            <label for="phoneNumber" class="form-label">Phone Number</label>
                            <input type="tel" class="form-control" id="phoneNumber" name="phoneNumber">
                            <div id="phoneNumber-error" class="text-danger"></div>
                        </div>
                        <div class="mb-3">
                            <label for="zip" class="form-label">ZIP Code</label>
                            <input type="text" class="form-control" id="zip" name="zip">
                            <div id="zip-error" class="text-danger"></div>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Add New Address</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <!-- Edit Address Structure -->
    <div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editAddressForm">
                        <input type="hidden" id="addressId" name="addressId">
                        <div class="mb-3">
                            <label for="editLabel" class="form-label">Label (Optional)</label>
                            <input type="text" class="form-control" id="editLabel" name="label"
                                placeholder="Home, Work, etc.">
                            <div id="editLabel-error" class="text-danger"></div>
                        </div>
                        <div class="mb-3">
                            <label for="editStreet" class="form-label">Street</label>
                            <input type="text" class="form-control" id="editStreet" name="street">
                            <div id="editStreet-error" class="text-danger"></div>
                        </div>
                        <div class="mb-3">
                            <label for="editCity" class="form-label">City</label>
                            <input type="text" class="form-control" id="editCity" name="city">
                            <div id="editCity-error" class="text-danger"></div>
                        </div>
                        <div class="mb-3">
                            <label for="editState" class="form-label">State</label>
                            <input type="text" class="form-control" id="editState" name="state">
                            <div id="editState-error" class="text-danger"></div>
                        </div>
                        <div class="mb-3">
                            <label for="editCountry" class="form-label">Country</label>
                            <input type="text" class="form-control" id="editCountry" name="country">
                            <div id="editCountry-error" class="text-danger"></div>
                        </div>
                        <div class="mb-3">
                            <label for="editPhone" class="form-label">Phone Number</label>
                            <input type="tel" class="form-control" id="editPhone" name="phone">
                            <div id="editPhone-error" class="text-danger"></div>
                        </div>
                        <div class="mb-3">
                            <label for="editZip" class="form-label">ZIP Code</label>
                            <input type="text" class="form-control" id="editZip" name="zip">
                            <div id="editZip-error" class="text-danger"></div>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Update Address</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>






    <!-- Bootstrap JS and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


    <!-- Js Plugins -->
    <script src="js/jquery-3.3.1.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/jquery.nice-select.min.js"></script>
    <script src="js/jquery.nicescroll.min.js"></script>
    <script src="js/jquery.magnific-popup.min.js"></script>
    <script src="js/jquery.countdown.min.js"></script>
    <script src="js/jquery.slicknav.js"></script>
    <script src="js/mixitup.min.js"></script>
    <script src="js/owl.carousel.min.js"></script>
    <script src="js/main.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <script>
        document.querySelectorAll('.delete-address-btn').forEach(button => {
            button.addEventListener('click', function (e) {
                e.preventDefault();
                const form = this.closest('.delete-address-form');
    
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit();
                    }
                });
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('addAddressForm');

            form.addEventListener('submit', async function (event) {
                event.preventDefault(); // Prevent default form submission

                const label = document.getElementById('label').value;
                const street = document.getElementById('street').value;
                const city = document.getElementById('city').value;
                const state = document.getElementById('state').value;
                const country = document.getElementById('country').value;
                const phoneNumber = document.getElementById('phoneNumber').value;
                const zip = document.getElementById('zip').value;

                // Clear previous errors
                document.getElementById('label-error').textContent = '';
                document.getElementById('street-error').textContent = '';
                document.getElementById('city-error').textContent = '';
                document.getElementById('state-error').textContent = '';
                document.getElementById('country-error').textContent = '';
                document.getElementById('phoneNumber-error').textContent = '';
                document.getElementById('zip-error').textContent = '';

                let hasError = false;

                // Example validation
                if (!label) {
                    document.getElementById('label-error').textContent = 'Label is required';
                    hasError = true;
                }


                if (!street) {
                    document.getElementById('street-error').textContent = 'Street is required';
                    hasError = true;
                }
                if (!city) {
                    document.getElementById('city-error').textContent = 'City is required';
                    hasError = true;
                }
                if (!state) {
                    document.getElementById('state-error').textContent = 'State is required';
                    hasError = true;
                }
                if (!country) {
                    document.getElementById('country-error').textContent = 'Country is required';
                    hasError = true;
                }
                if (!phoneNumber) {
                    document.getElementById('phoneNumber-error').textContent = 'Phone Number is required';
                    hasError = true;
                }
                if (!zip) {
                    document.getElementById('zip-error').textContent = 'ZIP Code is required';
                    hasError = true;
                }

                if (hasError) {
                    return; // Stop form submission if errors are present
                }

                try {
                    const response = await fetch('/profile/address/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ label, street, city, state, country, phoneNumber, zip })
                    });

                    const result = await response.json();

                    if (result.success) {
                        // SweetAlert2 for success confirmation
                        Swal.fire({
                            title: 'Success!',
                            text: 'Address added successfully.',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                // Optionally, close the modal or reset the form
                                $('#addAddressModal').modal('hide'); // Hide modal using Bootstrap
                                form.reset(); // Reset form fields
                                window.location.href = '/profile/address'; // Redirect to address page
                            }
                        });
                    } else {
                        // Handle backend validation errors
                        if (result.errors) {
                            for (const [key, error] of Object.entries(result.errors)) {
                                document.getElementById(`${key}-error`).textContent = error;
                            }
                        }
                    }
                } catch (error) {
                    console.error('Error adding address:', error);
                    Swal.fire({
                        title: 'Error',
                        text: 'An unexpected error occurred. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        });





        // Populate modal with address data
        $('#editAddressModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); // Button that triggered the modal
            var modal = $(this);

            // Extract info from data-* attributes
            var addressId = button.data('id');
            var label = button.data('label');
            var street = button.data('street');
            var city = button.data('city');
            var state = button.data('state');
            var country = button.data('country');
            var phone = button.data('phone');
            var zip = button.data('zip');

            // Populate the form fields with the extracted data
            modal.find('#addressId').val(addressId);
            modal.find('#editLabel').val(label);
            modal.find('#editStreet').val(street);
            modal.find('#editCity').val(city);
            modal.find('#editState').val(state);
            modal.find('#editCountry').val(country);
            modal.find('#editPhone').val(phone);
            modal.find('#editZip').val(zip);
        });

        // Handle form submission via AJAX
        // Handle form submission via AJAX
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('editAddressForm');

            form.addEventListener('submit', async function (event) {
                event.preventDefault(); // Prevent default form submission

                const addressId = document.getElementById('addressId').value;
                const label = document.getElementById('editLabel').value;
                const street = document.getElementById('editStreet').value;
                const city = document.getElementById('editCity').value;
                const state = document.getElementById('editState').value;
                const country = document.getElementById('editCountry').value;
                const phoneNumber = document.getElementById('editPhone').value;
                const zip = document.getElementById('editZip').value;

                // Clear previous errors
                document.getElementById('editLabel-error').textContent = '';
                document.getElementById('editStreet-error').textContent = '';
                document.getElementById('editCity-error').textContent = '';
                document.getElementById('editState-error').textContent = '';
                document.getElementById('editCountry-error').textContent = '';
                document.getElementById('editPhone-error').textContent = '';
                document.getElementById('editZip-error').textContent = '';

                let hasError = false;

                // Example validation
                if (!street) {
                    document.getElementById('editStreet-error').textContent = 'Street is required';
                    hasError = true;
                }
                if (!city) {
                    document.getElementById('editCity-error').textContent = 'City is required';
                    hasError = true;
                }
                if (!state) {
                    document.getElementById('editState-error').textContent = 'State is required';
                    hasError = true;
                }
                if (!country) {
                    document.getElementById('editCountry-error').textContent = 'Country is required';
                    hasError = true;
                }
                if (!phoneNumber) {
                    document.getElementById('editPhone-error').textContent = 'Phone Number is required';
                    hasError = true;
                }
                if (!zip || zip.length !== 6 || !/^\d+$/.test(zip)) {
                    document.getElementById('editZip-error').textContent = 'ZIP Code must be exactly 6 digits';
                    hasError = true;
                }

                if (hasError) {
                    return; // Stop form submission if errors are present
                }

                try {
                    const response = await fetch(`/profile/address/update/${addressId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ label, street, city, state, country, phoneNumber, zip })
                    });

                    const result = await response.json();

                    if (result.success) {
                        // SweetAlert2 for success message
                        Swal.fire({
                            title: 'Updated!',
                            text: 'Address updated successfully.',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                // Optionally, close the modal or reset the form
                                $('#editAddressModal').modal('hide'); // Hide modal using Bootstrap
                                form.reset(); // Reset form fields
                                window.location.href = '/profile/address'; // Redirect to the address page
                            }
                        });
                    } else {
                        // Handle backend validation errors
                        if (result.errors) {
                            for (const [key, error] of Object.entries(result.errors)) {
                                document.getElementById(`${key}-error`).textContent = error;
                            }
                        }
                    }
                } catch (error) {
                    console.error('Error updating address:', error);
                    Swal.fire({
                        title: 'Error',
                        text: 'An unexpected error occurred. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        });




    </script>

</body>

</html>