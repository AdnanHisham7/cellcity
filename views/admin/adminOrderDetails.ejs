<%- include('../layouts/admin/header') %>

<div class="row">
    <div class="col-8">
        <div class="order-details-page">
            <!-- Order ID Section -->
            <div class="order-id-section">
                <div class="order-id">Order Details:</div>
                <div class="order-date">Ordered at <%= order.createdAt.toDateString() %></div>
                <div class="payment-status"><%= order.paymentMethod %></div>
            </div>

            <% order.items.forEach(item => { %>
            <!-- Order Item Container -->
            <div class="order-item-container">
                <div class="order-item">
                    <div class="item-category"><%= item.variant.productId.productName %></div>
                    <div class="item-status <%= order.status.toLowerCase() %>"><%= order.status %></div>
                    <div class="item-price text-success">$<%= item.variant.price %></div>
                    <div class="item-info">
                        <img src="<%= item.variant.variantImages[0].replace('uploads', '') %>" alt="" height="100">
                        <div class="item-details">
                            <div class="item-name">Quantity: <%= item.quantity %></div>
                            <div class="item-type"><%= item.variant.storage %>, <%= item.variant.RAM %></div>
                            <div class="item-color-size"><%= item.variant.color %></div>
                        </div>
                    </div>
                </div>
            </div>
            <% }) %>

            <!-- Order Summary Container -->
            <div class="order-summary-container">
                <div class="summary-header">Order Summary</div>
                <div class="summary-details">
                    <div class="summary-total">
                        <div class="label">Total</div>
                        <div class="value">$<%= order.totalAmount %>.00</div>
                    </div>
                </div>
            </div>

            <!-- Status Update Form -->
            <form action="/admin/orders/<%= order._id %>/status" method="POST">
                <div class="form-group">
                    <label for="status">Order Status</label>
                    <select name="status" id="status" class="form-control">
                        <option value="Pending" <%=order.status==='Pending' ? 'selected' : '' %>>Pending</option>
                        <option value="Returned" <%=order.status==='Returned' ? 'selected' : '' %>>Returned</option>
                        <option value="Delivered" <%=order.status==='Delivered' ? 'selected' : '' %>>Delivered</option>
                        <option value="Cancelled" <%=order.status==='Cancelled' ? 'selected' : '' %>>Cancelled</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-success mt-3">Update Status</button>
            </form>
        </div>
    </div>

    <div class="col-4">
        <!-- Shipping Address Container -->
        <div class="shipping-address-container" style="margin-top: 50px;">
            <div class="shipping-header">Shipping Address</div>
            <div class="shipping-details">
                <div class="shipping-name"><%= order.user.username %></div>
                <div class="shipping-address">
                    <%= order.shippingAddress.street %>, <%= order.shippingAddress.city %><br />
                    <%= order.shippingAddress.state %><br />
                    <%= order.shippingAddress.country %>, <%= order.shippingAddress.zip %>
                </div>
                <div class="shipping-contact">Phone: <%= order.shippingAddress.phoneNumber %></div>
            </div>
        </div>
    </div>
</div>



    </div>
    </div>
    </div>

    <!-- User Details Modal -->
    <div class="modal fade" id="userDetailsModal" tabindex="-1" aria-labelledby="userDetailsModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="userDetailsModalLabel">User Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="userDetailsContent">
                        <!-- User details will be injected here via JavaScript -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Confirmation Modal -->
    <div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmationModalLabel">Confirm Status Change</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to change the status of this user?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmAction">Confirm</button>
                </div>
            </div>
        </div>
    </div>

    <!-- jQuery and DataTables JS -->
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Get the sub-heading text
        const subHeadingText = document.querySelector('.sub-heading').textContent;

        // Set the placeholder attribute of the input field
        const searchInput = document.getElementById('customSearch');
        searchInput.placeholder = `Search ${subHeadingText}...`;


        $(document).ready(function () {
            // Initialize the DataTable
            var table = $('.table').DataTable({
                "pageLength": 7, // Show 5 rows at a time
                "lengthChange": false, // Disable the option to change the number of rows shown
                "ordering": true, // Enable column ordering
                "info": true, // Disable info showing "Showing X of X entries"
                "pagingType": "simple", // Simple pagination controls
                "searching": true, // Disable the default search bar
                "language": {
                    "paginate": {
                        "previous": "Previous", // Customize the text
                        "next": "Next" // Customize the text
                    }
                },
                "columnDefs": [
                    { "orderable": false, "targets": [2, -1] } // Disable ordering on the "Image" (3rd) and "Actions" (last) columns
                ]
            });

            // Apply the search to the custom input field
            $('#customSearch').on('keyup', function () {
                table.search(this.value).draw();
            });
        });


        document.addEventListener('DOMContentLoaded', () => {
            const userDetailsModal = new bootstrap.Modal(document.getElementById('userDetailsModal'));
            const confirmationModal = new bootstrap.Modal(document.getElementById('confirmationModal'));
            const userDetailsContent = document.getElementById('userDetailsContent');
            let userIdToToggle = null;

            // Handle row clicks to show user details modal
            document.querySelectorAll('tr').forEach(row => {
                row.addEventListener('click', async (event) => {
                    if (event.target.closest('.toggle-status')) {
                        return; // Skip row click handling for action buttons
                    }

                    const userId = row.getAttribute('data-user-id');

                    if (userId) {
                        try {
                            const response = await fetch(`/admin/users/${userId}`);
                            const user = await response.json();

                            userDetailsContent.innerHTML = `
                                <p><strong>Name:</strong> ${user.username}</p>
                                <p><strong>Email:</strong> ${user.email}</p>
                                <p><strong>Phone:</strong> ${user.phone || 'N/A'}</p>
                                <p><strong>Created At:</strong> ${new Date(user.createdAt).toLocaleString()}</p>
                                <p><strong>Status:</strong> ${user.status}</p>
                                <p><strong>Admin:</strong> ${user.isAdmin ? 'Yes' : 'No'}</p>
                            `;
                            userDetailsModal.show(); // Show the user details modal
                        } catch (error) {
                            console.error('Error fetching user details:', error);
                        }
                    }
                });
            });

            // Handle action button clicks to show confirmation modal
            document.querySelectorAll('.toggle-status').forEach(button => {
                button.addEventListener('click', function (event) {
                    event.stopPropagation(); // Prevent row click event
                    userIdToToggle = this.getAttribute('data-user-id');
                    confirmationModal.show(); // Show the confirmation modal
                });
            });

            // Handle confirmation action
            document.getElementById('confirmAction').addEventListener('click', async () => {
                if (userIdToToggle) {
                    try {
                        const response = await fetch(`/admin/users/action/${userIdToToggle}`, {
                            method: 'POST'
                        });
                        const result = await response.json();

                        if (response.ok) {
                            // Update the status in the table
                            const row = document.querySelector(`tr[data-user-id="${userIdToToggle}"]`);
                            if (row) {
                                const statusCell = row.querySelector('td:nth-child(5)');
                                statusCell.innerText = result.status;
                                if (result.status === 'active') {
                                    statusCell.classList.remove('text-danger');
                                    statusCell.classList.add('text-success');
                                } else {
                                    statusCell.classList.remove('text-success');
                                    statusCell.classList.add('text-danger');
                                }
                            }
                        } else {
                            console.error('Error toggling user status:', result.message);
                        }
                    } catch (error) {
                        console.error('Error toggling user status:', error);
                    } finally {
                        confirmationModal.hide(); // Hide the confirmation modal
                    }
                }
            });
        });


        //logout Logic
        document.getElementById('logoutButton').addEventListener('click', async () => {
            try {
                await fetch('/admin/logout', {
                    method: 'GET',
                    credentials: 'include' // Ensure cookies are sent with the request
                });
                localStorage.removeItem('token'); // Clear the token from local storage
                window.location.href = '/admin'; // Redirect to login page
            } catch (error) {
                console.error('Logout error:', error);
            }
        });
    </script>

    </body>

    </html>