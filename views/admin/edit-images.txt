(req, res) => {
  const productId = req.params.id;
  const productImages = req.files; // Array of uploaded files

  // Fetch the current product details from the database
  const product = getProductById(productId);

  // Delete old images
  if (product.images) {
    product.images.forEach(image => {
      const filePath = path.join(__dirname, 'uploads', image);
      fs.unlink(filePath, err => {
        if (err) console.log(`Failed to delete old image: ${filePath}`);
      });
    });
  }

  // Save new images
  const newImages = productImages.map(file => file.filename);

  // Update the product in the database
  updateProductImages(productId, newImages)
    .then(() => res.send('Product updated successfully'))
    .catch(err => res.status(500).send('Error updating product'));
}



// Handle image upload
$('#imageUploadForm').submit(function(event) {
  event.preventDefault();

  var formData = new FormData(this);
  // Assuming you have an endpoint for updating images
  $.ajax({
    url: '/update-product-images', // Your endpoint
    type: 'POST',
    data: formData,
    contentType: false,
    processData: false,
    success: function(response) {
      // Handle success (e.g., refresh modal content)
      showProductDetails(response.updatedProduct);
      alert('Images updated successfully');
    },
    error: function(xhr, status, error) {
      alert('An error occurred: ' + error);
    }
  });
});

// Function to display product details including images
function showProductDetails(product) {
  // Populate modal with product data
  $('#productDetailsModal .modal-title').text(product.name);
  $('#productImages').empty(); // Clear existing images

  // Add images to the modal
  product.images.forEach((image) => {
    $('#productImages').append(`
      <img src="${image.url}" alt="${product.name}" class="img-thumbnail" style="max-width: 100px; margin-right: 10px;">
    `);
  });

  // Show the modal
  $('#productDetailsModal').modal('show');
}



<div id="productImages">
          <!-- Images will be injected here -->
        </div>
        <!-- Add form for changing images -->
        <form id="imageUploadForm" enctype="multipart/form-data">
          <input type="file" name="images" multiple>
          <button type="submit" class="btn btn-primary">Upload Images</button>
        </form>


        const multer = require('multer');
const path = require('path');
const fs = require('fs');

// Set storage engine
const storage = multer.diskStorage({
  destination: './uploads/',
  filename: (req, file, cb) => {
    // Use the original filename to support updating existing images
    cb(null, file.originalname);
  },
});

// Check file type
const checkFileType = (file, cb) => {
  const filetypes = /jpeg|jpg|png|gif/;
  const extname = filetypes.test(path.extname(file.originalname).toLowerCase());
  const mimetype = filetypes.test(file.mimetype);

  if (mimetype && extname) {
    return cb(null, true);
  } else {
    cb('Error: Images Only!');
  }
};

const upload = multer({
  storage: storage,
  limits: { fileSize: 1000000 },
  fileFilter: (req, file, cb) => {
    checkFileType(file, cb);
  },
}).array('productImages', 3); // Handle multiple files, up to 3 files

module.exports = upload;

