<%- include('../layouts/admin/header') %>

    <div class="main-content" style="margin-top: 70px;">
        <h3 class="sub-heading">Categories</h3>
        <div class="container">
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>BRAND ID</th>
                        <th>NAME</th>
                        <th>STATUS</th>
                        <th>ACTIONS</th>
                    </tr>
                </thead>
                <tbody>
                    <% brands.forEach(brand=> { %>
                        <tr data-brand-id="<%= brand._id %>">
                            <td>
                                <%= brand._id %>
                            </td>
                            <td>
                                <%= brand.brandName %>
                            </td>
                            <% if(brand.status=='active' ){%>
                                <td class="text-success">
                                    <%= brand.status %>
                                </td>
                                <%}else{%>
                                    <td class="text-danger">
                                        <%= brand.status %>
                                    </td>
                                    <% } %>
                                        <td>
                                            <button type="button" class="custom-button toggle-status"
                                                data-brand-id="<%= brand._id %>" data-status="<%= brand.status %>">
                                                Change
                                            </button>
                                        </td>
                        </tr>
                        <% }) %>
                </tbody>
            </table>

            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addbrandModal">
                Add New brand
            </button>


        </div>
    </div>
    </div>
    </div>
    </div>


    <!-- brand Details Modal -->
    <div class="modal fade" id="brandDetailsModal" tabindex="-1" aria-labelledby="brandDetailsModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="brandDetailsModalLabel">brand Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="brandDetailsForm">
                    <div class="modal-body">
                        <input type="hidden" id="brandId" name="brandId">
                        <div class="mb-3">
                            <label for="brandName" class="form-label">Brand Name</label>
                            <input type="text" class="form-control" id="brandName" name="brandName" required>
                            <br>
                            <b class="text-success"> Created At : </b>
                            <div name="createdAt" id="createdAt"></div>
                            <b class="text-danger"> Updated At : </b>
                            <div name="updatedAt" id="updatedAt"></div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Update</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Confirmation Modal -->
    <div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmationModalLabel">Confirm Status Change</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to change the status of this brand?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmAction">Confirm</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Brand Modal -->
    <div class="modal fade" id="addbrandModal" tabindex="-1" aria-labelledby="addbrandModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addbrandModalLabel">Add New Brand</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="addBrandForm" action="/admin/brands/add" method="POST">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="brandName" class="form-label">Brand Name</label>
                            <input type="text" class="form-control" id="brandName" name="brandName" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Add Brand</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/js/all.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const brandDetailsModal = new bootstrap.Modal(document.getElementById('brandDetailsModal'));
            const confirmationModal = new bootstrap.Modal(document.getElementById('confirmationModal'));
            const brandDetailsForm = document.getElementById('brandDetailsForm');
            let brandIdToToggle = null;

            // Function to format the timestamp
            function formatTimestamp(timestamp) {
                const date = new Date(timestamp);
                const day = date.getDate();
                const month = date.getMonth() + 1;
                const year = date.getFullYear();
                const hours = date.getHours();
                const minutes = date.getMinutes();
                const seconds = date.getSeconds();

                const formattedMinutes = minutes < 10 ? '0' + minutes : minutes;
                const formattedSeconds = seconds < 10 ? '0' + seconds : seconds;

                const formattedDate = `${day}/${month}/${year}`;
                const formattedTime = `${hours}:${formattedMinutes}:${formattedSeconds}`;

                return `${formattedDate} ${formattedTime}`;
            }

            // Handle row clicks to show brand details modal
            document.querySelectorAll('tr[data-brand-id]').forEach(row => {
                row.addEventListener('click', async (event) => {
                    if (event.target.closest('.toggle-status')) {
                        return; // Skip row click handling for action buttons
                    }

                    const brandId = row.getAttribute('data-brand-id');

                    if (brandId) {
                        try {
                            const response = await fetch(`/admin/brands/${brandId}`);
                            const brand = await response.json();

                            // Populate the form with brand details
                            brandDetailsForm.querySelector('#brandId').value = brand._id; // Set the hidden input
                            brandDetailsForm.querySelector('#brandName').value = brand.brandName;
                            brandDetailsForm.querySelector('#createdAt').innerHTML = formatTimestamp(brand.createdAt);
                            brandDetailsForm.querySelector('#updatedAt').innerHTML = formatTimestamp(brand.updatedAt);

                            brandDetailsModal.show(); // Show the brand details modal
                        } catch (error) {
                            console.error('Error fetching brand details:', error);
                        }
                    }
                });
            });

            // Handle form submission
            brandDetailsForm.addEventListener('submit', async (event) => {
                event.preventDefault();

                const formData = new FormData(brandDetailsForm);
                const brandData = {
                    brandName: formData.get('brandName'),
                    updatedAt: Date.now(), // Call the function to get the current timestamp
                };
                const brandId = formData.get('brandId'); // Get the brandId from the hidden input

                try {
                    const response = await fetch(`/admin/brands/${brandId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(brandData)
                    });

                    if (response.ok) {
                        location.reload(); // Optionally, refresh the page or update the table dynamically
                    } else {
                        alert('Failed to update brand.');
                    }
                } catch (error) {
                    console.error('Error updating brand:', error);
                }
            });


            // Handle action button clicks to show confirmation modal
            document.querySelectorAll('.toggle-status').forEach(button => {
                button.addEventListener('click', function (event) {
                    event.stopPropagation(); // Prevent row click event
                    brandIdToToggle = this.getAttribute('data-brand-id');
                    confirmationModal.show(); // Show the confirmation modal
                });
            });

            // Handle confirmation action
            document.getElementById('confirmAction').addEventListener('click', async () => {
                if (brandIdToToggle) {
                    try {
                        const response = await fetch(`/admin/brands/action/${brandIdToToggle}`, {
                            method: 'POST'
                        });
                        const result = await response.json();

                        if (response.ok) {
                            // Update the status in the table
                            const row = document.querySelector(`tr[data-brand-id="${brandIdToToggle}"]`);
                            if (row) {
                                const statusCell = row.querySelector('td:nth-child(3)');
                                statusCell.innerText = result.status;
                                if (result.status === 'active') {
                                    statusCell.classList.remove('text-danger');
                                    statusCell.classList.add('text-success');
                                } else {
                                    statusCell.classList.remove('text-success');
                                    statusCell.classList.add('text-danger');
                                }
                            }
                        } else {
                            console.error('Error toggling brand status:', result.message);
                        }
                    } catch (error) {
                        console.error('Error toggling brand status:', error);
                    } finally {
                        confirmationModal.hide(); // Hide the confirmation modal
                    }
                }
            });
        });

        //logout Logic
        document.getElementById('logoutButton').addEventListener('click', async () => {
            try {
                await fetch('/admin/logout', {
                    method: 'GET',
                    credentials: 'include' // Ensure cookies are sent with the request
                });
                localStorage.removeItem('token'); // Clear the token from local storage
                window.location.href = '/admin'; // Redirect to login page
            } catch (error) {
                console.error('Logout error:', error);
            }
        });
    </script>

    </body>

    </html>